@startuml
'https://plantuml.com/class-diagram


file FBPost.jpg{
}

class Storage{
- listOfFiles: file
+ saveToStorage(FBPost.jpg)
}
Storage::saveToStorage ..> FBPost.jpg

class PostVerification {
' Атрибуты
- signature: byte[]
- dateOfSignature: date
- location: GPS_coordinates
- uniformResourceIdentifier: String
- user: String
' Методы:
+ getSignature(file, DataBase, screenshot: JPG): byte[]
+ getDate(file, DataBase, screenshot: JPG): byte[]
+ getLocation(file, DataBase, screenshot: JPG): byte[]
+ getOwner(file, DataBase, screenshot: JPG): String
}

PostVerification ..> FBPost.jpg

class AggregateSignature{
- signature: byte[]
- user
+ AggregateSignature(FBPostVerification)
}
AggregateSignature::AggregateSignature ..> PostVerification
AggregateSignature::user ..> PostVerification::user

class AllSignaturesAtSomeDate{
- allSignaturesAtSomeDate: ListOfString
- appendAggregateSignature(AggregateSignature)
- saveToFile(allSignaturesAtSomeDate): AllSignaturesAtFile.txt
}

file AllSignaturesAtFile.txt {
}

AllSignaturesAtFile.txt <.. AllSignaturesAtSomeDate

class Signature{
- Signature: byte[]
- calculateSignature(File)
- putToBlockChain(Signature)
}

class PlanerOfPutInBlockChain{
+ bySchedule(Signature, Rules)
+ byDemand(Signature, Rules, payment)
}
PlanerOfPutInBlockChain::bySchedule <.. Rules
PlanerOfPutInBlockChain::bySchedule <.. Signature

class Rules{
+ rules1
+ rules2
+ AccessLevels
+ typeOfBlockChain
}

file BlockChain {
' List of Blockchains
}



Signature::putToBlockChain --> BlockChain

Signature::calculateSignature <.. AllSignaturesAtFile.txt

AllSignaturesAtSomeDate::appendAggregateSignature ..> AggregateSignature

class GetCheckSum{
getCheckSum(BlockChain)
}
GetCheckSum::getCheckSum ..> BlockChain

@enduml